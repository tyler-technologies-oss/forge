import{C as y,l as h,j as k,B as u,k as x}from"./constants-DzQy6WDX.js";import{B as E,c as t}from"./base-adapter-C8aSF3nG.js";import"./service-adapter-CffG5Lhq.js";import{h as A,p as L,g as I,c as s}from"./feature-detection-B-sRDmdg.js";import"./index-5CPwzmQS.js";import{a as w,F as T}from"./focus-indicator-Cy1dlEJL.js";import{L as O}from"./label-Btw7qdXU.js";import{W as z}from"./with-label-aware-C7up74QW.js";const m={LABEL_POSITION:"label-position",LABEL_ALIGNMENT:"label-alignment",INVALID:"invalid",REQUIRED:"required",OPTIONAL:"optional",DISABLED:"disabled",FLOAT_LABEL:"float-label",VARIANT:"variant",THEME:"theme",SHAPE:"shape",DENSITY:"density",DENSE:"dense",POPOVER_ICON:"popover-icon",POPOVER_EXPANDED:"popover-expanded",SUPPORT_TEXT_INSET:"support-text-inset"},N={...m},P={DEFAULT_VARIANT:"outlined",DEFAULT_THEME:"default",DEFAULT_SHAPE:"default",DEFAULT_DENSITY:"default",DEFAULT_LABEL_POSITION:"inset",DEFAULT_LABEL_ALIGNMENT:"default",DEFAULT_SUPPORT_TEXT_INSET:"none"},d={observedAttributes:m,attributes:N,defaults:P},v=`${y}field`,_={...d.observedAttributes,MULTILINE:"multiline",FOCUS_INDICATOR_ALLOW_FOCUS:"focus-indicator-allow-focus",FOCUS_INDICATOR_FOCUS_MODE:"focus-indicator-focus-mode"},S={..._,MULTI_INPUT_SEPARATOR:"data-forge-multi-input-separator"},C={FLOATING_IN:"floating-in",FLOATING_OUT:"floating-out",HAS_LABEL:"has-label",HAS_START:"has-start",HAS_END:"has-end",HAS_ACCESSORY:"has-accessory",HAS_SUPPORT_START:"has-support-text-start",HAS_SUPPORT_END:"has-support-text-end"},R={ROOT:"#root",CONTAINER:"#container",INPUT_CONTAINER:"#input",LABEL:"#label",LABEL_SLOT:"slot[name=label]",POPOVER_ICON:"#popover-icon",LABEL_ELEMENTS:`:where(label, ${O.elementName})`,POPOVER_TARGET:".popover-target"},D={ROOT:"root",LABEL:"label",SURFACE:"surface",START:"start",INPUT:"input",END:"end",POPOVER_ICON:"popover-icon",ACCESSORY:"accessory",SUPPORT_TEXT:"support-text",SUPPORT_TEXT_END:"support-text-end",OUTLINE:"outline",FOCUS_INDICATOR:"focus-indicator"},F={POPOVER_ICON_CLICK:`${v}-popover-icon-click`,POPOVER_ICON_MOUSEDOWN:`${v}-popover-icon-mousedown`},U={...d.defaults},B={FLOAT_IN_LABEL:"float-in-label-animation",FLOAT_OUT_LABEL:"float-out-label-animation"},i={elementName:v,observedAttributes:_,attributes:S,classes:C,selectors:R,parts:D,events:F,defaults:U,animations:B};class H extends E{get focusIndicator(){return this._focusIndicatorElement}get hasSlottedLabel(){return!!this._labelSlotElement.assignedNodes({flatten:!0}).length}constructor(e){super(e),this._rootElement=h(e,i.selectors.ROOT),this._containerElement=h(e,i.selectors.CONTAINER),this._inputContainerElement=h(e,i.selectors.INPUT_CONTAINER),this._labelElement=h(e,i.selectors.LABEL),this._labelSlotElement=h(e,i.selectors.LABEL_SLOT),this._popoverIconElement=h(e,i.selectors.POPOVER_ICON),this._focusIndicatorElement=h(e,w)}addRootListener(e,o){this._rootElement.addEventListener(e,o)}addPopoverIconListener(e,o){this._popoverIconElement.addEventListener(e,o)}removePopoverIconListener(e,o){this._popoverIconElement.removeEventListener(e,o)}setLabelPosition(e){this._labelElement.remove(),e==="inset"?this._containerElement.prepend(this._labelElement):this._rootElement.prepend(this._labelElement)}setFloatingLabel(e){const o=e?i.classes.FLOATING_IN:i.classes.FLOATING_OUT,r=e?i.animations.FLOAT_IN_LABEL:i.animations.FLOAT_OUT_LABEL,a=p=>{p.animationName===r&&(I(o,this._rootElement),this._rootElement.removeEventListener("animationend",a))};A(o,this._rootElement),this._rootElement.addEventListener("animationend",a)}handleSlotChange(e){if(e.name===""){this._trySlotLabel(e);return}for(;e.assignedSlot;)e=e.assignedSlot;if(!e)return;const o={label:i.classes.HAS_LABEL,start:i.classes.HAS_START,end:i.classes.HAS_END,accessory:i.classes.HAS_ACCESSORY,"support-text":i.classes.HAS_SUPPORT_START,"support-text-end":i.classes.HAS_SUPPORT_END};e.name in o&&L(this._rootElement,!!e.assignedNodes({flatten:!0}).length,o[e.name])}initializeSlots(){this._rootElement.querySelectorAll("slot").forEach(o=>this.handleSlotChange(o))}_trySlotLabel(e){e.assignedElements({flatten:!0}).filter(a=>a.matches(i.selectors.LABEL_ELEMENTS)).forEach(a=>{a.slot||(a.slot="label")})}}class M{constructor(e){this._adapter=e,this._labelPosition=i.defaults.DEFAULT_LABEL_POSITION,this._labelAlignment=i.defaults.DEFAULT_LABEL_ALIGNMENT,this._floatLabel=!1,this._invalid=!1,this._required=!1,this._optional=!1,this._disabled=!1,this._variant=i.defaults.DEFAULT_VARIANT,this._theme=i.defaults.DEFAULT_THEME,this._shape=i.defaults.DEFAULT_SHAPE,this._density=i.defaults.DEFAULT_DENSITY,this._dense=!1,this._popoverIcon=!1,this._popoverExpanded=!1,this._multiline=!1,this._supportTextInset=i.defaults.DEFAULT_SUPPORT_TEXT_INSET,this._slotChangeListener=this._onSlotChange.bind(this),this._popoverIconClickListener=this._onPopoverIconClick.bind(this),this._popoverIconMousedownListener=this._onPopoverIconMousedown.bind(this)}initialize(){this._adapter.addRootListener("slotchange",this._slotChangeListener),this._adapter.initializeSlots(),this._adapter.tryApplyGlobalConfiguration(["labelPosition","variant"]),this._adapter.setLabelPosition(this._labelPosition),this._popoverIcon&&(this._adapter.addPopoverIconListener("click",this._popoverIconClickListener),this._adapter.addPopoverIconListener("mousedown",this._popoverIconMousedownListener))}_onSlotChange(e){this._adapter.handleSlotChange(e.target)}_onPopoverIconClick(){this._adapter.dispatchHostEvent(new CustomEvent(i.events.POPOVER_ICON_CLICK,{bubbles:!0,composed:!0}))}_onPopoverIconMousedown(e){const o=new CustomEvent(i.events.POPOVER_ICON_MOUSEDOWN,{bubbles:!0,composed:!0,cancelable:!0});this._adapter.dispatchHostEvent(o),o.defaultPrevented&&e.preventDefault()}floatLabelWithoutAnimation(e){this._floatLabel!==e&&(this._floatLabel=e,this._adapter.toggleHostAttribute(i.attributes.FLOAT_LABEL,this._floatLabel))}get labelPosition(){return this._labelPosition}set labelPosition(e){if(this._labelPosition!==e){if(this._labelPosition=e,this._adapter.setHostAttribute(i.attributes.LABEL_POSITION,this._labelPosition),!this._adapter.isConnected)return;this._adapter.setLabelPosition(this._labelPosition)}}get labelAlignment(){return this._labelAlignment}set labelAlignment(e){this._labelAlignment!==e&&(this._labelAlignment=e,this._adapter.setHostAttribute(i.attributes.LABEL_ALIGNMENT,this._labelAlignment))}get floatLabel(){return this._floatLabel}set floatLabel(e){this._floatLabel!==e&&(this._floatLabel=e,this._adapter.hasSlottedLabel&&this._adapter.setFloatingLabel(this._floatLabel),this._adapter.toggleHostAttribute(i.attributes.FLOAT_LABEL,this._floatLabel))}get invalid(){return this._invalid}set invalid(e){this._invalid!==e&&(this._invalid=e,this._adapter.toggleHostAttribute(i.attributes.INVALID,this._invalid))}get required(){return this._required}set required(e){this._required!==e&&(this._required=e,this._adapter.toggleHostAttribute(i.attributes.REQUIRED,this._required))}get optional(){return this._optional}set optional(e){this._optional!==e&&(this._optional=e,this._adapter.toggleHostAttribute(i.attributes.OPTIONAL,this._optional))}get disabled(){return this._disabled}set disabled(e){this._disabled!==e&&(this._disabled=e,this._adapter.toggleHostAttribute(i.attributes.DISABLED,this._disabled))}get variant(){return this._variant}set variant(e){this._variant!==e&&(this._variant=e,this._adapter.setHostAttribute(i.attributes.VARIANT,this._variant))}get theme(){return this._theme}set theme(e){this._theme!==e&&(this._theme=e,this._adapter.setHostAttribute(i.attributes.THEME,this._theme))}get shape(){return this._shape}set shape(e){this._shape!==e&&(this._shape=e,this._adapter.setHostAttribute(i.attributes.SHAPE,this._shape))}get density(){return this._density}set density(e){this._density!==e&&(this._density=e,this._adapter.setHostAttribute(i.attributes.DENSITY,this._density))}get dense(){return this._dense}set dense(e){this._dense!==e&&(this._dense=e,this._adapter.toggleHostAttribute(i.attributes.DENSE,this._dense))}get popoverIcon(){return this._popoverIcon}set popoverIcon(e){if(this._popoverIcon!==e){if(this._popoverIcon=e,this._adapter.toggleHostAttribute(i.attributes.POPOVER_ICON,this._popoverIcon),!this._adapter.isConnected)return;this._popoverIcon?(this._adapter.addPopoverIconListener("click",this._popoverIconClickListener),this._adapter.addPopoverIconListener("mousedown",this._popoverIconMousedownListener)):(this._adapter.removePopoverIconListener("click",this._popoverIconClickListener),this._adapter.removePopoverIconListener("mousedown",this._popoverIconMousedownListener))}}get popoverExpanded(){return this._popoverExpanded}set popoverExpanded(e){this._popoverExpanded!==e&&(this._popoverExpanded=e,this._adapter.toggleHostAttribute(i.attributes.POPOVER_EXPANDED,this._popoverExpanded))}get multiline(){return this._multiline}set multiline(e){this._multiline!==e&&(this._multiline=e,this._adapter.toggleHostAttribute(i.attributes.MULTILINE,this._multiline))}get supportTextInset(){return this._supportTextInset}set supportTextInset(e){this._supportTextInset!==e&&(this._supportTextInset=e,this._adapter.setHostAttribute(i.attributes.SUPPORT_TEXT_INSET,this._supportTextInset))}get focusIndicatorTargetElement(){return this._adapter.focusIndicator.targetElement}set focusIndicatorTargetElement(e){this._adapter.focusIndicator.targetElement=e}get focusIndicatorFocusMode(){return this._adapter.focusIndicator.focusMode}set focusIndicatorFocusMode(e){this._adapter.focusIndicator.focusMode=e}get focusIndicatorAllowFocus(){return this._adapter.focusIndicator.allowFocus}set focusIndicatorAllowFocus(e){this._adapter.focusIndicator.allowFocus=e}}const q=`<template>
  <div id="root" class="forge-field" part="root">
    <div id="label" class="label" part="label">
      <slot name="label"></slot>
    </div>
    <div id="container" class="container">
      <div class="popover-target" aria-hidden="true"></div>
      <div id="surface" class="surface" part="surface"></div>
      <div id="start" class="start" part="start">
        <slot name="start"></slot>
      </div>
      <div id="input" class="input" part="input">
        <slot></slot>
      </div>
      <div id="end" class="end" part="end">
        <slot name="end"></slot>
      </div>
      <div id="popover-icon" class="popover-icon" part="popover-icon">
        <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24" aria-hidden="true">
          <path d="M0 0h24v24H0z" fill="none" />
          <path d="M7 10l5 5 5-5z" id="popover-icon__arrow" />
        </svg>
      </div>
      <div id="accessory" class="accessory" part="accessory">
        <slot name="accessory"></slot>
      </div>
    </div>
    <div class="support-text">
      <div class="support-text-start" part="support-text">
        <slot name="support-text"></slot>
      </div>
      <div class="support-text-end" part="support-text-end">
        <slot name="support-text-end"></slot>
      </div>
    </div>
    <div class="outline" part="outline">
      <forge-focus-indicator target="input" part="focus-indicator"></forge-focus-indicator>
    </div>
  </div>
</template>
`,G='@keyframes float-in-label-animation{0%{translate:0;opacity:40%}to{translate:var(--_field-floating-label-translation);opacity:100%}}@keyframes float-out-label-animation{0%{translate:var(--_field-floating-label-translation);opacity:40%}to{translate:0;opacity:100%}}@keyframes multiline-inset-label-background-animation{0%{opacity:0%}to{opacity:100%}}@layer base,theme,variant,shape,density;@layer base{:host{display:block}:host([hidden]){display:none}.forge-field{--_field-background: var(--forge-field-background, transparent);--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-surface-container-low, #ebebeb));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-surface-container-minimum, #f5f5f5));--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-surface-bright, #ffffff));--_field-outline-style: var(--forge-field-outline-style, solid);--_field-outline-width: var(--forge-field-outline-width, var(--forge-border-thin, 1px));--_field-shape: var(--forge-field-shape, calc(var(--forge-shape-medium, 4px) * var(--forge-shape-factor, 1)));--_field-height: var(--forge-field-height, 40px);--_field-inset-height: var(--forge-field-inset-height, 48px);--_field-padding-inline: var(--forge-field-padding-inline, 12px);--_field-padding-inline-start: var(--forge-field-padding-inline-start, var(--_field-padding-inline));--_field-padding-inline-end: var(--forge-field-padding-inline-end, var(--_field-padding-inline));--_field-inner-padding-inline: var(--forge-field-inner-padding-inline, 8px);--_field-rounded-container-padding-inline: var(--forge-field-rounded-container-padding-inline, calc(var(--_field-height) / 2));--_field-rounded-container-padding-inline-start: var(--forge-field-rounded-container-padding-inline-start, var(--_field-rounded-container-padding-inline));--_field-rounded-container-padding-inline-end: var(--forge-field-rounded-container-padding-inline-end, var(--_field-rounded-container-padding-inline));--_field-support-text-margin-block: var(--forge-field-support-text-margin-block, 4px);--_field-support-text-gap: var(--forge-field-support-text-gap, 8px);--_field-support-text-padding-inline: var(--forge-field-support-text-padding-inline, var(--_field-padding-inline));--_field-support-text-padding-inline-start: var(--forge-field-support-text-padding-inline-start, var(--_field-support-text-padding-inline));--_field-support-text-padding-inline-end: var(--forge-field-support-text-padding-inline-end, var(--_field-support-text-padding-inline));--_field-label-margin-inline: var(--forge-field-label-margin-inline, 8px);--_field-label-margin-block: var(--forge-field-label-margin-block, 4px);--_field-required-padding: var(--forge-field-required-padding, .35ch);--_field-required-content: var(--forge-field-required-content, "*");--_field-optional-padding: var(--forge-field-optional-padding, .5ch);--_field-optional-content: var(--forge-field-optional-content, "(optional)");--_field-multiline-resize: var(--forge-field-multiline-resize, block);--_field-multiline-min-inline-size: var(--forge-field-multiline-min-inline-size, initial);--_field-multiline-max-inline-size: var(--forge-field-multiline-max-inline-size, initial);--_field-multiline-min-block-size: var(--forge-field-multiline-min-block-size, var(--_field-height));--_field-multiline-max-block-size: var(--forge-field-multiline-max-block-size, initial);--_field-popover-icon-transition-duration: var(--forge-field-popover-icon-transition-duration, var(--forge-animation-duration-short3, .15s));--_field-popover-icon-transition-timing: var(--forge-field-popover-icon-transition-timing, var(--forge-animation-easing-standard, cubic-bezier(.2, 0, 0, 1)));--_field-popover-icon-open-rotation: var(--forge-field-popover-icon-open-rotation, 180deg);--_field-surface-animation-duration: var(--forge-field-surface-animation-duration, var(--forge-animation-duration-short4, .2s));--_field-surface-animation-timing: var(--forge-field-surface-animation-timing, var(--forge-animation-easing-standard, cubic-bezier(.2, 0, 0, 1)));--_field-floating-animation-duration: var(--forge-field-floating-animation-duration, var(--forge-animation-duration-short2, .1s));--_field-floating-animation-timing: var(--forge-field-floating-animation-timing, var(--forge-animation-easing-linear, cubic-bezier(0, 0, 1, 1)));--_field-focus-indicator-width: var(--forge-field-focus-indicator-width, var(--forge-focus-indicator-width, var(--forge-border-medium, 2px)));--_field-disabled-opacity: var(--forge-field-disabled-opacity, .38);--_field-disabled-background: var(--forge-field-disabled-background, var(--forge-theme-surface-container-low, #ebebeb));--_field-font-size: var(--forge-field-font-size, inherit);--_field-dense-font-size: var(--forge-field-dense-font-size, .875rem);--_field-placeholder-color: var(--forge-field-placeholder-color, var(--forge-theme-text-medium, rgba(0, 0, 0, .6)));--_field-overflow: var(--forge-field-overflow, hidden);--_field-isolation: var(--forge-field-isolation, isolate)}.forge-field{--_field-disableable-cursor: var(--forge-field-disableable-cursor, auto);--_field-disableable-opacity: var(--forge-field-disableable-opacity, 1);--_field-inner-border-block-size: var(--forge-field-inner-border-block-size, 100%);--_field-inner-border-color: var(--forge-field-inner-border-color, var(--_field-outline-color));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--_field-outline-color-hover));--_field-inner-border-display: var(--forge-field-inner-border-display, block);--_field-label-color: var(--forge-field-label-color, var(--forge-theme-text-high, rgba(0, 0, 0, .87)));--_field-label-grid-area: var(--forge-field-label-grid-area, "label");--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-surface, #ffffff));--_field-multiline-inset-label-background-hover: var(--forge-field-multiline-inset-label-background-hover, var(--_field-multiline-inset-label-background));--_field-surface-display: var(--forge-field-surface-display, block);position:relative;display:grid}}@layer theme{:host(:where([theme=default],:not([theme]))) .forge-field{--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-primary, #3f51b5));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-text-high, rgba(0, 0, 0, .87)));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-outline-low, #9e9e9e));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-outline-high, #212121));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-text-medium, rgba(0, 0, 0, .6)));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--_field-filled-background));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--_field-tonal-background));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--_field-tonal-background-hover));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-outline-low, #9e9e9e));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-outline-high, #212121))}:host(:where([label-position=inset],:not([label-position])):where([theme=default],:not([theme]))) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-text-medium, rgba(0, 0, 0, .6)))}:host([theme=primary]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-primary-container-minimum, #f7f8fc));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-primary, #3f51b5));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-primary-container-low, #e8eaf6));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-primary-container-minimum, #f7f8fc));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-primary-container, #222c62));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-primary, #3f51b5));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-primary-container, #222c62));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-primary-container-low, #222c62));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-primary-container-minimum, #f7f8fc));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-primary-container-low, #e8eaf6));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-primary-container-minimum, #f7f8fc));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-primary, #3f51b5));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-primary-container, #222c62))}:host(:where([label-position=inset],:not([label-position]))[theme=primary]) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-on-primary-container-low, #222c62))}:host([theme=secondary]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-secondary-container-minimum, #fffdf5));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-secondary, #ffc107));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-secondary-container-low, #fff8e1));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-secondary-container-minimum, #fffdf5));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-secondary-container, #8a6804));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-on-secondary-container, #8a6804));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-secondary-container, #8a6804));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-secondary-container-low, #8a6804));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-secondary-container-minimum, #fffdf5));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-secondary-container-low, #fff8e1));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-secondary-container-minimum, #fffdf5));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-on-secondary-container, #8a6804));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-secondary-container, #8a6804))}:host(:where([label-position=inset],:not([label-position]))[theme=secondary]) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-on-secondary-container-low, #8a6804))}:host([theme=tertiary]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-tertiary-container-minimum, #f7f8ff));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-tertiary, #3d5afe));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-tertiary-container-low, #e8ebff));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-tertiary-container-minimum, #f7f8ff));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-tertiary-container, #213189));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-tertiary, #3d5afe));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-tertiary-container, #213189));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-tertiary-container-low, #213189));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-tertiary-container-minimum, #f7f8ff));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-tertiary-container-low, #e8ebff));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-tertiary-container-minimum, #f7f8ff));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-tertiary, #3d5afe));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-tertiary-container, #213189))}:host(:where([label-position=inset],:not([label-position]))[theme=tertiary]) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-on-tertiary-container-low, #213189))}:host([theme=success]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-success-container-minimum, #f7faf7));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-success, #2e7d32));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-success-container-low, #e6efe6));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-success-container-minimum, #f7faf7));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-success-container, #19441b));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-success, #2e7d32));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-success-container, #19441b));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-success-container-low, #19441b));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-success-container-minimum, #f7faf7));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-success-container-low, #e6efe6));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-success-container-minimum, #f7faf7));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-success, #2e7d32));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-success-container, #19441b))}:host(:where([label-position=inset],:not([label-position]))[theme=success]) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-on-success-container-low, #19441b))}:host([theme=error]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-error, #b00020));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-error-container-low, #f6e0e4));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-error-container, #5f0011));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-error, #b00020));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-error-container, #5f0011));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-error-container-low, #5f0011));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-error-container-low, #f6e0e4));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-error, #b00020));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-error-container, #5f0011))}:host(:where([label-position=inset],:not([label-position]))[theme=error]) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-on-error-container-low, #5f0011))}:host([theme=warning]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-warning-container-minimum, #fdf8f5));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-warning, #d14900));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-warning-container-low, #f9e9e0));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-warning-container-minimum, #fdf8f5));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-warning-container, #712700));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-warning, #d14900));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-warning-container, #712700));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-warning-container-low, #712700));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-warning-container-minimum, #fdf8f5));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-warning-container-low, #f9e9e0));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-warning-container-minimum, #fdf8f5));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-warning, #d14900));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-warning-container, #712700))}:host(:where([label-position=inset],:not([label-position]))[theme=warning]) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-on-warning-container-low, #712700))}:host([theme=info]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-info-container-minimum, #f6f9fc));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-info, #1565c0));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-info-container-low, #e3edf7));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-info-container-minimum, #f6f9fc));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-info-container, #0b3768));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-info, #1565c0));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-info-container, #0b3768));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-info-container-low, #0b3768));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-info-container-minimum, #f6f9fc));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-info-container-low, #e3edf7));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-info-container-minimum, #f6f9fc));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-info, #1565c0));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-info-container, #0b3768))}:host(:where([label-position=inset],:not([label-position]))[theme=info]) .forge-field{--_field-label-color: var(--forge-field-label-color, var(--forge-theme-on-info-container-low, #0b3768))}}@layer variant{:host([variant=plain]) .forge-field{--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-surface, #ffffff));--_field-multiline-inset-label-background-hover: var(--forge-field-multiline-inset-label-background-hover, var(--forge-theme-surface, #ffffff));--_field-outline-color: var(--forge-field-outline-color, transparent);--_field-outline-color-hover: var(--forge-field-outline-color-hover, transparent);--_field-inner-border-display: var(--forge-field-inner-border-display, none);--_field-padding-inline: var(--forge-field-padding-inline, 0);--_field-surface-display: var(--forge-field-surface-display, none)}:host(:where([variant=outlined],:not([variant]))) .forge-field{--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-surface, #ffffff));--_field-multiline-inset-label-background-hover: var(--forge-field-multiline-inset-label-background-hover, var(--forge-theme-surface, #ffffff))}:host([variant=tonal]) .forge-field{--_field-outline-color: var(--forge-field-outline-color, transparent);--_field-outline-color-hover: var(--forge-field-outline-color-hover, transparent);--_field-inner-border-block-size: var(--forge-field-inner-border-block-size, calc(100% - 8px) );--_field-background: var(--_field-tonal-background);--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--_field-background));--_field-hover-background: var(--forge-field-hover-background, tonal-background-hover);--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--_field-multiline-inset-label-tonal-background))}:host([variant=filled]) .forge-field{--_field-background: var(--_field-filled-background);--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--_field-background))}:host([variant=raised]) .forge-field{--_field-elevation: var(--forge-field-elevation, 0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12));--_field-elevation-active: var(--forge-field-elevation-active, 0px 3px 3px -2px rgba(0, 0, 0, .2), 0px 3px 4px 0px rgba(0, 0, 0, .14), 0px 1px 8px 0px rgba(0, 0, 0, .12));--_field-outline-color: var(--forge-field-outline-color, transparent);--_field-outline-color-hover: var(--forge-field-outline-color-hover, transparent);--_field-inner-border-block-size: var(--forge-field-inner-border-block-size, calc(100% - 8px) );--_field-background: var(--_field-filled-background);--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--_field-background))}}@layer shape{:host([shape=squared]) .forge-field{--_field-shape: var(--forge-field-shape, 0)}:host([shape=rounded]) .forge-field{--_field-shape: var(--forge-field-shape, calc(var(--forge-shape-full, 9999px) * var(--forge-shape-factor, 1)));--_field-padding-inline: var(--forge-field-padding-inline, var(--_field-rounded-container-padding-inline-start))}}@layer density{:host(:where([label-position=inset],:not([label-position])):not([dense]):where([density=default],:not([density]))) .forge-field{--_field-height: var(--forge-field-height, var(--_field-inset-height))}:host(:where([density=extra-small],[dense])) .forge-field{--_field-height: var(--forge-field-height, 24px);--_field-padding-inline-start: var(--forge-field-padding-inline-start, 8px);--_field-padding-inline-end: var(--forge-field-padding-inline-end, 4px)}:host(:where([label-position=inset],:not([label-position])):where([density=extra-small],[dense])) .forge-field{--_field-height: var(--forge-field-height, 24px)}:host(:where([label-position=inset],:not([label-position])):where([density=extra-small],[dense])) .label,:host(:where([label-position=inset],:not([label-position])):where([density=extra-small],[dense])) .label:before{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);clip-path:inset(50%);white-space:nowrap;border:0}:host(:where([label-position=inset],:not([label-position])):where([density=extra-small],[dense])) ::slotted(:where(input,textarea,[data-forge-field-input])){--_field-font-size: var(--_field-dense-font-size)}:host(:not([dense])[density=small]) .forge-field{--_field-height: var(--forge-field-height, 32px)}:host(:where([label-position=inset],:not([label-position])):not([dense])[density=small]) .forge-field{--_field-height: var(--forge-field-height, 40px)}:host(:not([dense])[density=medium]) .forge-field{--_field-height: var(--forge-field-height, 40px)}:host(:where([label-position=inset],:not([label-position])):not([dense])[density=medium]) .forge-field{--_field-height: var(--forge-field-height, 48px)}:host(:not([dense])[density=large]) .forge-field{--_field-height: var(--forge-field-height, 48px)}:host(:where([label-position=inset],:not([label-position])):not([dense])[density=large]) .forge-field{--_field-height: var(--forge-field-height, 56px)}:host(:not([dense])[density=extra-large]) .forge-field{--_field-height: var(--forge-field-height, 56px)}:host(:where([label-position=inset],:not([label-position])):not([dense])[density=extra-large]) .forge-field{--_field-height: var(--forge-field-height, 64px)}}:host([disabled]) .forge-field{--_field-background: var(--_field-disabled-background);--_field-disableable-cursor: var(--forge-field-disableable-cursor, not-allowed);--_field-disableable-opacity: var(--forge-field-disableable-opacity, var(--_field-disabled-opacity))}:host(:not([disabled])[invalid]) .forge-field{--_field-filled-background: var(--forge-field-filled-background, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-focus-indicator-color: var(--forge-field-focus-indicator-color, var(--forge-theme-error, #b00020));--_field-tonal-background: var(--forge-field-tonal-background, var(--forge-theme-error-container-low, #f6e0e4));--_field-tonal-background-hover: var(--forge-field-tonal-background-hover, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-content-color: var(--forge-field-content-color, var(--forge-theme-on-error-container, #5f0011));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--forge-theme-error, #b00020));--_field-inner-border-color-hover: var(--forge-field-inner-border-color-hover, var(--forge-theme-on-error-container, #5f0011));--_field-inset-label-color: var(--forge-field-inset-label-color, var(--forge-theme-on-error-container-low, #5f0011));--_field-multiline-inset-label-background: var(--forge-field-multiline-inset-label-background, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--forge-theme-error-container-low, #f6e0e4));--_field-multiline-inset-label-tonal-background-hover: var(--forge-field-multiline-inset-label-tonal-background-hover, var(--forge-theme-error-container-minimum, #fcf5f6));--_field-outline-color: var(--forge-field-outline-color, var(--forge-theme-error, #b00020));--_field-outline-color-hover: var(--forge-field-outline-color-hover, var(--forge-theme-on-error-container, #5f0011));--_field-label-color: var(--forge-field-label-color, var(--forge-theme-error, #b00020))}:host(:not([disabled])[invalid]) .forge-field .support-text{color:var(--forge-theme-error, #b00020)}:host(:not([disabled])) .forge-field:has(.container:hover){--_field-outline-color: var(--forge-field-outline-color, var(--_field-outline-color-hover));--_field-elevation: var(--forge-field-elevation, var(--_field-elevation-active));--_field-tonal-background: var(--_field-tonal-background-hover);--_field-multiline-inset-label-tonal-background: var(--forge-field-multiline-inset-label-tonal-background, var(--_field-multiline-inset-label-tonal-background-hover));--_field-inner-border-color: var(--forge-field-inner-border-color, var(--_field-inner-border-color-hover))}:host(:not([disabled])) .forge-field:has(.input:focus-within){--_field-elevation: var(--forge-field-elevation, var(--_field-elevation-active))}.forge-field .outline{opacity:var(--_field-disableable-opacity);cursor:var(--_field-disableable-cursor);transition-duration:var(--_field-surface-animation-duration);transition-property:outline-color;transition-timing-function:var(--_field-surface-animation-timing);position:relative;grid-area:main;inline-size:100%;block-size:100%;box-shadow:var(--_field-elevation);border-radius:var(--_field-shape);outline-style:var(--_field-outline-style);outline-width:var(--_field-outline-width);outline-color:var(--_field-outline-color);outline-offset:calc(var(--_field-outline-width) * -1);pointer-events:none}.forge-field .container{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-body2-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-body2-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-font-size-scale, 1)));font-weight:var(--forge-typography-body2-font-weight, 400);line-height:var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375)));letter-spacing:var(--forge-typography-body2-letter-spacing, .015625em);text-transform:var(--forge-typography-body2-text-transform, inherit);text-decoration:var(--forge-typography-body2-text-decoration, inherit);position:relative;display:grid;isolation:var(--_field-isolation);grid-area:main;grid-template-areas:"start center end popover-icon accessory";grid-template-columns:auto 1fr auto auto auto;align-items:center;border-radius:var(--_field-shape);inline-size:100%;block-size:var(--_field-height);overflow:var(--_field-overflow)}.forge-field .surface{opacity:var(--_field-disableable-opacity);cursor:var(--_field-disableable-cursor);transition-duration:var(--_field-surface-animation-duration);transition-property:background;transition-timing-function:var(--_field-surface-animation-timing);display:var(--_field-surface-display);grid-column:1/-1;grid-row:1/-1;border-radius:var(--_field-shape);inline-size:100%;block-size:100%;background:var(--_field-background);pointer-events:none}.forge-field .input{opacity:var(--_field-disableable-opacity);cursor:var(--_field-disableable-cursor);display:flex;grid-area:center;block-size:100%;inline-size:100%;min-inline-size:0;color:var(--forge-theme-text-high, rgba(0, 0, 0, .87))}.forge-field .label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-label2-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-label2-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-font-size-scale, .8125)));font-weight:var(--forge-typography-label2-font-weight, 400);line-height:var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25)));letter-spacing:var(--forge-typography-label2-letter-spacing, .0096153846em);text-transform:var(--forge-typography-label2-text-transform, inherit);text-decoration:var(--forge-typography-label2-text-decoration, inherit);position:relative;display:inline-flex;grid-area:var(--_field-label-grid-area);pointer-events:var(--_field-label-pointer-events);margin-block-end:var(--_field-label-margin-block-end);margin-inline-start:var(--_field-label-margin-inline-start);margin-inline-end:var(--_field-label-margin-inline-end);block-size:fit-content;overflow:hidden;color:var(--_field-label-color);line-height:normal;white-space:var(--_field-label-white-space)}.forge-field .popover-target{position:absolute;inset:calc(var(--_field-focus-indicator-width) * -1);pointer-events:none}.forge-field .popover-icon{display:none}.forge-field .popover-icon__arrow{fill:inherit}.forge-field .start,.forge-field .end,.forge-field .accessory,.forge-field .support-text,.forge-field .support-text-start,.forge-field .support-text-end{display:none}:host([required]) .has-label .label:before{margin-inline-end:var(--_field-required-padding);color:var(--forge-theme-error, #b00020);content:var(--_field-required-content)}:host([optional]) .label:after{margin-inline-start:var(--_field-optional-padding);color:inherit;content:var(--_field-optional-content)}:host([popover-icon]) .popover-icon{opacity:var(--_field-disableable-opacity);cursor:var(--_field-disableable-cursor);padding-inline-end:var(--_field-inner-padding-inline);display:flex;align-items:center;grid-area:popover-icon;isolation:isolate;block-size:100%}:host([popover-icon]) .popover-icon>*{transition:rotate var(--_field-popover-icon-transition-duration) var(--_field-popover-icon-transition-timing);fill:var(--_field-content-color)}:host([popover-icon][popover-expanded]) .popover-icon>*{rotate:var(--_field-popover-icon-open-rotation)}.forge-field.has-start .start{opacity:var(--_field-disableable-opacity);cursor:var(--_field-disableable-cursor);padding-inline-start:var(--_field-padding-inline-start);display:flex;grid-area:start;align-items:center;block-size:100%;max-block-size:100%;min-block-size:0;color:var(--_field-content-color)}.forge-field.has-end .end{opacity:var(--_field-disableable-opacity);cursor:var(--_field-disableable-cursor);padding-inline-end:var(--_field-padding-inline-end);display:flex;grid-area:end;align-items:center;block-size:100%;max-block-size:100%;min-block-size:0;color:var(--_field-content-color)}.forge-field.has-accessory .accessory{padding-inline-end:var(--_field-inner-padding-inline);position:relative;display:flex;grid-area:accessory;align-items:center;block-size:100%;max-block-size:100%;min-block-size:0;color:var(--_field-content-color)}.forge-field.has-accessory .accessory:before{opacity:var(--_field-disableable-opacity);cursor:var(--_field-disableable-cursor);transition-duration:var(--_field-surface-animation-duration);transition-property:border-color;transition-timing-function:var(--_field-surface-animation-timing);padding-inline-end:var(--_field-inner-padding-inline);display:var(--_field-inner-border-display);border-inline-start-style:solid;border-inline-start-width:var(--_field-outline-width);border-inline-start-color:var(--_field-inner-border-color);block-size:var(--_field-inner-border-block-size);content:""}.forge-field.has-accessory .forge-field:not(.has-accessory) .popover-icon{padding-inline-end:var(--_field-padding-inline-end)}.forge-field.has-support-text-start .support-text,.forge-field.has-support-text-end .support-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-label1-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-label1-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-font-size-scale, .75)));font-weight:var(--forge-typography-label1-font-weight, 400);line-height:var(--forge-typography-label1-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25)));letter-spacing:var(--forge-typography-label1-letter-spacing, .0357142857em);text-transform:var(--forge-typography-label1-text-transform, inherit);text-decoration:var(--forge-typography-label1-text-decoration, inherit);justify-content:space-between;display:grid;grid-template-areas:"start end";grid-template-columns:1fr auto;grid-area:support-text;margin-block-start:var(--_field-support-text-margin-block);line-height:normal}.forge-field.has-support-text-start.has-support-text-end .support-text{gap:var(--_field-support-text-gap)}.forge-field.has-support-text-start .support-text-start{display:inline-block;grid-area:start}.forge-field.has-support-text-end .support-text-end{display:inline-block;grid-area:end}:host(:not([popover-icon])) .forge-field:not(.has-accessory) .end{padding-inline-end:var(--_field-padding-inline-end)}:host([label-position=block-start]) .forge-field{grid-template-areas:"label" "main" "support-text";grid-template-columns:1fr;grid-template-rows:auto auto auto}:host([label-position=block-start]) .label{--_field-label-margin-block-end: var(--forge-field-label-margin-block-end, var(--_field-label-margin-block))}:host([label-position=inline-start]) .forge-field{grid-template-areas:"label main" ". support-text";grid-template-columns:auto 1fr;grid-template-rows:auto auto}:host([label-position=inline-start]) .label{--_field-label-margin-inline-end: var(--forge-field-label-margin-inline-end, var(--_field-label-margin-inline))}:host([label-position=inline-end]) .forge-field{grid-template-areas:"main label" "support-text .";grid-template-columns:1fr auto;grid-template-rows:auto auto}:host([label-position=inline-end]) .label{--_field-label-margin-inline-start: var(--forge-field-label-margin-inline-start, var(--_field-label-margin-inline))}:host(:where([label-position=inset],:not([label-position]))) .forge-field{grid-template-areas:"main" "support-text";grid-template-columns:1fr;grid-template-rows:auto auto;--_field-label-grid-area: var(--forge-field-label-grid-area, center);--_field-label-pointer-events: var(--forge-field-label-pointer-events, none);--_field-label-white-space: var(--forge-field-label-white-space, nowrap)}:host(:where([label-position=inset],:not([label-position]))) .label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-body2-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-body2-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-font-size-scale, 1)));font-weight:var(--forge-typography-body2-font-weight, 400);line-height:var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375)));letter-spacing:var(--forge-typography-body2-letter-spacing, .015625em);text-transform:var(--forge-typography-body2-text-transform, inherit);text-decoration:var(--forge-typography-body2-text-decoration, inherit);padding-inline-start:var(--_field-padding-inline-start);padding-inline-end:var(--_field-padding-inline-end);z-index:999;--_field-floating-label-translation: var(--forge-field-floating-label-translation, 0 calc(calc( calc(max(var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375))), var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25))))/2) + calc((var(--_field-height) - 56px) / 8)) * -1))}:host([label-position=none]) .forge-field{grid-template-areas:"main" "support-text";grid-template-columns:1fr;grid-template-rows:auto auto}:host([label-position=none]) .label{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);clip-path:inset(50%);white-space:nowrap;border:0}:host([label-position=inline-start][label-alignment=start]) .label,:host([label-position=inline-end][label-alignment=start]) .label{align-self:start}:host([label-position=inline-start]:where([label-alignment=center],[label-alignment=default],:not([label-alignment]))) .label,:host([label-position=inline-end]:where([label-alignment=center],[label-alignment=default],:not([label-alignment]))) .label{align-self:center}:host([label-position=inline-start][label-alignment=end]) .label,:host([label-position=inline-end][label-alignment=end]) .label{align-self:end}:host([label-position=inline-start][label-alignment=baseline]) .label,:host([label-position=inline-end][label-alignment=baseline]) .label{align-self:center;padding-block-start:calc(var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375))) - var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25))))}:host([label-position=block-start]:where([label-alignment=start],[label-alignment=default],:not([label-alignment]))) .label{justify-self:start}:host([label-position=block-start][label-alignment=center]) .label{justify-self:center}:host([label-position=block-start][label-alignment=end]) .label{justify-self:end}:host([label-position=block-start][label-alignment=baseline]:not([variant=plain])) .label{justify-self:start;padding-inline-start:var(--_field-padding-inline-start)}:host([label-position=block-start][label-alignment=baseline][variant=plain]) .label{justify-self:start;padding-inline-start:0px}:host(:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .has-label .label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-label2-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-label2-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-font-size-scale, .8125)));font-weight:var(--forge-typography-label2-font-weight, 400);line-height:var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25)));letter-spacing:var(--forge-typography-label2-letter-spacing, .0096153846em);text-transform:var(--forge-typography-label2-text-transform, inherit);text-decoration:var(--forge-typography-label2-text-decoration, inherit);translate:var(--_field-floating-label-translation)}:host(:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .has-label .input{box-sizing:border-box}:host(:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .has-label.floating-in .label{animation-name:float-in-label-animation;animation-duration:var(--_field-floating-animation-duration);animation-timing-function:var(--_field-floating-animation-timing)}:host(:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .has-label.floating-in .input ::slotted(:is(input,[data-forge-field-input],[data-forge-multi-input-separator])){padding-block-start:calc(calc(calc(max(var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375))),var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25))))/2) + calc((var(--_field-height) - 56px) / 8)) * 2)!important}:host(:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .has-label:not(.floating-in) .input ::slotted(:is(input,[data-forge-field-input],[data-forge-multi-input-separator])){padding-block-start:calc(calc(calc(max(var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375))),var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25))))/2) + calc((var(--_field-height) - 56px) / 8)) * 2)!important}:host(:where([label-position=inset],:not([label-position])):not([float-label])) .has-label.floating-out .label{animation-name:float-out-label-animation;animation-duration:var(--_field-floating-animation-duration);animation-timing-function:var(--_field-floating-animation-timing)}:host(:where([label-position=inset],:not([label-position]))[float-label][multiline]) .has-label ::slotted(textarea){padding-block-start:calc(calc(calc(max(var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375))),var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25))))/2) + calc((var(--_field-height) - 56px) / 8)) + (var(--_field-height) - var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375)))) / 2)!important;padding-block-end:calc((var(--_field-height) - var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375)))) / 2)!important}:host([support-text-inset=both]) .support-text{padding-inline-start:var(--_field-padding-inline-start);padding-inline-end:var(--_field-padding-inline-end)}:host([support-text-inset=start]) .support-text{padding-inline-start:var(--_field-padding-inline-start)}:host([support-text-inset=end]) .support-text{padding-inline-end:var(--_field-padding-inline-end)}:host([multiline]) .container{align-items:start;block-size:fit-content;min-inline-size:var(--_field-multiline-min-inline-size);max-inline-size:var(--_field-multiline-max-inline-size);min-block-size:var(--_field-multiline-min-block-size);max-block-size:var(--_field-multiline-max-block-size);resize:var(--_field-multiline-resize)}:host([multiline]) .container .label,:host([multiline]) .container .start,:host([multiline]) .container .end,:host([multiline]) .container .popover-icon{align-items:center;block-size:var(--_field-height)}:host([multiline]:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .label{pointer-events:none;inline-size:fit-content}:host([multiline]:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .label slot{display:block}:host([multiline]:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .label:after{animation-name:multiline-inset-label-background-animation;animation-duration:var(--_field-floating-animation-duration);animation-timing-function:var(--_field-floating-animation-timing);position:absolute;z-index:-1;inset-inline-start:var(--_field-outline-width);transition-duration:var(--_field-surface-animation-duration);transition-property:background;transition-timing-function:var(--_field-surface-animation-timing);background:var(--_field-multiline-inset-label-background);inline-size:100%;block-size:3ex;filter:blur(2px);content:""}:host([multiline]:where([label-position=inset],:not([label-position]))[float-label]:not(:where([density=extra-small],[dense]))) .forge-field:not(.has-label) .label:after{display:none}.forge-field .input ::slotted(*){box-sizing:border-box;margin:0;outline:none;border:none;background-color:transparent;padding-block:0;padding-inline:0;inline-size:100%;block-size:100%;color:inherit;font:inherit;font-size:var(--_field-font-size);text-overflow:ellipsis;padding-block-start:0;padding-block-end:0;transition:padding-block var(--_field-floating-animation-duration) var(--_field-floating-animation-timing);cursor:var(--_field-disableable-cursor)}.forge-field .input ::slotted(*)::placeholder{color:var(--_field-placeholder-color)}.forge-field .input ::slotted(textarea){resize:none}.forge-field .input ::slotted(:is([data-forge-field-input],*:first-of-type:is(input,textarea))){padding-inline-start:var(--_field-padding-inline-start)}.forge-field .input ::slotted(:is([data-forge-field-input],*:last-of-type:is(input,textarea))){padding-inline-end:var(--_field-padding-inline-end)}.forge-field .input ::slotted([data-forge-multi-input-separator]){align-self:center;padding-inline:4px;block-size:fit-content;inline-size:fit-content}.forge-field .label ::slotted(forge-label){font:inherit}.forge-field.has-start .input ::slotted(:is([data-forge-field-input],*:first-of-type:is(input,textarea))){padding-inline-start:var(--_field-inner-padding-inline)}.forge-field.has-end .input ::slotted(:is([data-forge-field-input],*:last-of-type:is(input,textarea))){padding-inline-end:var(--_field-inner-padding-inline)}.forge-field.has-accessory .end{padding-inline-end:var(--_field-inner-padding-inline)}.forge-field ::slotted(:where([slot=support-text],[slot=helper-text])){display:block;min-height:.875rem}:host([variant=plain]) .forge-field.has-accessory .end{padding-inline-end:var(--_field-inner-padding-inline)}:host(:where([label-position=inset],:not([label-position]))) .forge-field.has-start .label{padding-inline-start:var(--_field-inner-padding-inline)}:host(:where([label-position=inset],:not([label-position]))) .label ::slotted(*){max-inline-size:100%;overflow:hidden;text-overflow:ellipsis}:host([popover-icon]) .forge-field .input ::slotted(:is([data-forge-field-input],*:last-of-type:is(input,textarea))){padding-inline-end:var(--_field-inner-padding-inline)}:host([popover-icon]) .forge-field .end{padding-inline-end:var(--_field-inner-padding-inline)}:host(:not(popover-icon)) .forge-field.has-accessory:not(:is(.has-end)) .input ::slotted(:is([data-forge-field-input],*:last-of-type:is(input,textarea))){padding-inline-end:var(--_field-inner-padding-inline)}:host([multiline]) .input ::slotted(:is(input,textarea)){padding-block-start:calc((var(--_field-height) - var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375)))) / 2);padding-block-end:calc(calc(calc(max(var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375))),var(--forge-typography-label2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25))))/2) + calc((var(--_field-height) - 56px) / 8)) + (var(--_field-height) - var(--forge-typography-body2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.375)))) / 2)}:host([multiline]) .accessory slot{align-items:center;block-size:var(--_field-height);display:flex;align-self:start}forge-focus-indicator{--forge-focus-indicator-color: var(--_field-focus-indicator-color);--forge-focus-indicator-outward-offset: calc(var(--_field-outline-width) * -1);--forge-focus-indicator-shape: var(--_field-shape);--forge-focus-indicator-width: var(--_field-focus-indicator-width)}:host([variant=plain]) forge-focus-indicator{--forge-focus-indicator-offset-inline: -4px}@media (prefers-reduced-motion: reduce){.forge-field{--_field-floating-animation-duration: var(--forge-field-floating-animation-duration, 0s)}}';var X=Object.defineProperty,j=Object.getOwnPropertyDescriptor,n=(c,e,o,r)=>{for(var a=r>1?void 0:r?j(e,o):e,p=c.length-1,b;p>=0;p--)(b=c[p])&&(a=(r?b(e,o,a):b(a))||a);return r&&a&&X(e,o,a),a};let l=class extends u{static get observedAttributes(){return Object.values(i.observedAttributes)}constructor(){super(),x(this,q,G),this._core=new M(new H(this))}connectedCallback(){this._core.initialize()}attributeChangedCallback(c,e,o){switch(c){case i.attributes.LABEL_POSITION:this.labelPosition=o;break;case i.attributes.LABEL_ALIGNMENT:this.labelAlignment=o;break;case i.attributes.FLOAT_LABEL:this.floatLabel=s(o);break;case i.attributes.INVALID:this.invalid=s(o);break;case i.attributes.REQUIRED:this.required=s(o);break;case i.attributes.OPTIONAL:this.optional=s(o);break;case i.attributes.DISABLED:this.disabled=s(o);break;case i.attributes.VARIANT:this.variant=o;break;case i.attributes.THEME:this.theme=o;break;case i.attributes.SHAPE:this.shape=o;break;case i.attributes.DENSITY:this.density=o;break;case i.attributes.DENSE:this.dense=s(o);break;case i.attributes.POPOVER_ICON:this.popoverIcon=s(o);break;case i.attributes.POPOVER_EXPANDED:this.popoverExpanded=s(o);break;case i.attributes.MULTILINE:this.multiline=s(o);break;case i.attributes.SUPPORT_TEXT_INSET:this.supportTextInset=o;break;case i.attributes.FOCUS_INDICATOR_FOCUS_MODE:this.focusIndicatorFocusMode=o;break;case i.attributes.FOCUS_INDICATOR_ALLOW_FOCUS:this.focusIndicatorAllowFocus=s(o);break}}floatLabelWithoutAnimation(c){this._core.floatLabelWithoutAnimation(c)}};n([t()],l.prototype,"labelPosition",2);n([t()],l.prototype,"labelAlignment",2);n([t()],l.prototype,"floatLabel",2);n([t()],l.prototype,"invalid",2);n([t()],l.prototype,"required",2);n([t()],l.prototype,"optional",2);n([t()],l.prototype,"disabled",2);n([t()],l.prototype,"variant",2);n([t()],l.prototype,"theme",2);n([t()],l.prototype,"shape",2);n([t()],l.prototype,"density",2);n([t()],l.prototype,"dense",2);n([t()],l.prototype,"popoverIcon",2);n([t()],l.prototype,"popoverExpanded",2);n([t()],l.prototype,"multiline",2);n([t()],l.prototype,"supportTextInset",2);n([t()],l.prototype,"focusIndicatorTargetElement",2);n([t()],l.prototype,"focusIndicatorFocusMode",2);n([t()],l.prototype,"focusIndicatorAllowFocus",2);l=n([k({name:i.elementName,dependencies:[T]})],l);var W=Object.defineProperty,f=(c,e,o,r)=>{for(var a=void 0,p=c.length-1,b;p>=0;p--)(b=c[p])&&(a=b(e,o,a)||a);return a&&W(e,o,a),a};class g extends z(u){static get observedAttributes(){return Object.values(d.observedAttributes)}constructor(){super()}attributeChangedCallback(e,o,r){switch(e){case d.observedAttributes.LABEL_POSITION:this.labelPosition=r;return;case d.observedAttributes.LABEL_ALIGNMENT:this.labelAlignment=r;return;case d.observedAttributes.INVALID:this.invalid=s(r);return;case d.observedAttributes.REQUIRED:this.required=s(r);return;case d.observedAttributes.OPTIONAL:this.optional=s(r);return;case d.observedAttributes.DISABLED:this.disabled=s(r);return;case d.observedAttributes.FLOAT_LABEL:this.floatLabel=s(r);return;case d.observedAttributes.VARIANT:this.variant=r;return;case d.observedAttributes.THEME:this.theme=r;return;case d.observedAttributes.SHAPE:this.shape=r;return;case d.observedAttributes.DENSITY:this.density=r;return;case d.observedAttributes.DENSE:this.dense=s(r);return;case d.observedAttributes.POPOVER_ICON:this.popoverIcon=s(r);return;case d.observedAttributes.POPOVER_EXPANDED:this.popoverExpanded=s(r);return;case d.observedAttributes.SUPPORT_TEXT_INSET:this.supportTextInset=r;return}}labelClickedCallback(){this._core.click()}labelChangedCallback(e){this._core.applyLabel(e)}floatLabelWithoutAnimation(e){this._core.floatLabelWithoutAnimation(e)}}f([t()],g.prototype,"labelPosition");f([t()],g.prototype,"labelAlignment");f([t()],g.prototype,"invalid");f([t()],g.prototype,"required");f([t()],g.prototype,"optional");f([t()],g.prototype,"disabled");f([t({name:"permanentlyFloatLabel"})],g.prototype,"floatLabel");f([t()],g.prototype,"variant");f([t()],g.prototype,"theme");f([t()],g.prototype,"shape");f([t()],g.prototype,"density");f([t()],g.prototype,"dense");f([t()],g.prototype,"popoverIcon");f([t()],g.prototype,"popoverExpanded");f([t()],g.prototype,"supportTextInset");export{d as B,i as F,l as a,g as b};
