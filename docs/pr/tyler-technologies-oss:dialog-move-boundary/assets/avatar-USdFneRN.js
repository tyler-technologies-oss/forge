import{r as m,E as v,x as c}from"./iframe-Dk6FLRDb.js";import{n as f,B as d,t as u}from"./base-lit-element-CrUUnKFH.js";import{r as y}from"./state-BaWhT1Bd.js";import{o as _}from"./style-map-DxxfczF-.js";import{e as b}from"./class-map-CFV1iACR.js";import{C as z}from"./feature-detection-uS6p5jc8.js";const w=':host{display:inline-block}:host([hidden]){display:none}.forge-avatar{--_avatar-size: var(--forge-avatar-size, 40px);--_avatar-background: var(--forge-avatar-background, var(--forge-theme-tertiary, #3d5afe));--_avatar-color: var(--forge-avatar-color, var(--forge-theme-on-tertiary, #ffffff));--_avatar-transition-duration: var(--forge-avatar-transition-duration, var(--forge-animation-duration-short4, .2s));--_avatar-transition-timing: var(--forge-avatar-transition-timing, var(--forge-animation-easing-standard, cubic-bezier(.2, 0, 0, 1)));--_avatar-shape: var(--forge-avatar-shape, calc(var(--forge-shape-round, 50%) * var(--forge-shape-factor, 1)))}.forge-avatar{display:flex;align-items:center;justify-content:center;overflow:hidden;transition:height var(--_avatar-transition-duration) var(--_avatar-transition-timing),width var(--_avatar-transition-duration) var(--_avatar-transition-timing);border-radius:var(--_avatar-shape);box-sizing:border-box;width:var(--_avatar-size);height:var(--_avatar-size);background-color:var(--_avatar-background);background-position:center;background-repeat:no-repeat;background-size:cover;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-subheading2-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-subheading2-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-subheading2-font-size-scale, 1)));font-weight:var(--forge-typography-subheading2-font-weight, 400);line-height:var(--forge-typography-subheading2-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-subheading2-line-height-scale, 1.25)));letter-spacing:var(--forge-typography-subheading2-letter-spacing, normal);text-transform:var(--forge-typography-subheading2-text-transform, inherit);text-decoration:var(--forge-typography-subheading2-text-decoration, inherit);color:var(--_avatar-color)}.forge-avatar--image{background-color:inherit}';var C=Object.defineProperty,x=Object.getOwnPropertyDescriptor,i=(a,e,n,o)=>{for(var r=o>1?void 0:o?x(e,n):e,s=a.length-1,g;s>=0;s--)(g=a[s])&&(r=(o?g(e,n,r):g(r))||r);return o&&r&&C(e,n,r),r},p,h;const U=(a,e)=>a!=null&&a.trim()?e===1?a[0].toUpperCase():(a.match(/\S+/g)??[]).slice(0,e).reduce((o,r)=>o+=r[0].toUpperCase(),""):"",l="forge-avatar";let t=class extends(h=d,p=z,h){constructor(){super(...arguments),this.text="",this.letterCount=2,this.imageUrl=""}willUpdate(a){a.has("imageUrl")&&this._tryLoadImage()}render(){return c`
      <div
        aria-hidden="true"
        part="root"
        class=${b({"forge-avatar":!0,"forge-avatar--image":!!this._image})}
        style=${this._image?_({backgroundImage:`url(${this._image.src})`}):v}>
        <slot>${this._image?v:U(this.text,this.letterCount)}</slot>
      </div>
    `}async _tryLoadImage(){if(this.imageUrl){const a=new Image;a.onload=()=>this._image=a,a.onerror=()=>this._image=void 0,a.src=this.imageUrl}else this._image=void 0}};t.styles=m(w);t[p]=l;i([f()],t.prototype,"text",2);i([f({type:Number,attribute:"letter-count"})],t.prototype,"letterCount",2);i([f({type:String,attribute:"image-url"})],t.prototype,"imageUrl",2);i([y()],t.prototype,"_image",2);t=i([u(l)],t);export{t as A};
