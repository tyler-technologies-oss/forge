import{r as _,x as y}from"./iframe-yBsmFEOc.js";import{n as f,B as u,t as w}from"./base-lit-element-_mElq4eE.js";import{a as b}from"./utils-CRxrUqQD.js";import{C as k}from"./feature-detection-uS6p5jc8.js";const x=':host{display:flex;box-sizing:border-box}:host([hidden]){display:none}.forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-secondary, #ffc107));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-secondary, #000000));--_badge-shape: var(--forge-badge-shape, calc(var(--forge-shape-full, 9999px) * var(--forge-shape-factor, 1)));--_badge-height: var(--forge-badge-height, 20px);--_badge-min-width: var(--forge-badge-min-width, 0);--_badge-max-width: var(--forge-badge-max-width, auto);--_badge-padding-inline: var(--forge-badge-padding-inline, var(--forge-spacing-xsmall, 8px));--_badge-padding-block: var(--forge-badge-padding-block, 0);--_badge-border-width: var(--forge-badge-border-width, var(--forge-border-thin, 1px));--_badge-border-style: var(--forge-badge-border-style, none);--_badge-border-color: var(--forge-badge-border-color, var(--_badge-color));--_badge-gap: var(--forge-badge-gap, var(--forge-spacing-xxsmall, 4px));--_badge-font-weight: var(--forge-badge-font-weight, bold);--_badge-dot-size: var(--forge-badge-dot-size, 8px);--_badge-dot-height: var(--forge-badge-dot-height, var(--_badge-dot-size));--_badge-dot-width: var(--forge-badge-dot-width, var(--_badge-dot-size));--_badge-dot-padding: var(--forge-badge-dot-padding, 0);--_badge-transition-duration: var(--forge-badge-transition-duration, var(--forge-animation-duration-short4, .2s));--_badge-transition-easing: var(--forge-badge-transition-easing, var(--forge-animation-easing-decelerate, cubic-bezier(0, 0, 0, 1)))}.forge-badge{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-label1-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-label1-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-font-size-scale, .75)));font-weight:var(--forge-typography-label1-font-weight, 400);line-height:var(--forge-typography-label1-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-label-line-height-scale, 1.25)));letter-spacing:var(--forge-typography-label1-letter-spacing, .0357142857em);text-transform:var(--forge-typography-label1-text-transform, inherit);text-decoration:var(--forge-typography-label1-text-decoration, inherit);background:var(--_badge-background);color:var(--_badge-color);height:var(--_badge-height);min-width:var(--_badge-min-width);max-width:var(--_badge-max-width);border-width:var(--_badge-border-width);border-style:var(--_badge-border-style);border-color:var(--_badge-border-color);display:inline-flex;align-items:center;gap:var(--_badge-gap);border-radius:var(--_badge-shape);padding-inline:var(--_badge-padding-inline);padding-block:var(--_badge-padding-block);overflow:hidden;box-sizing:border-box;pointer-events:none;transition:transform var(--_badge-transition-duration) var(--_badge-transition-easing);font-weight:var(--_badge-font-weight);text-overflow:ellipsis;white-space:nowrap}.forge-badge .content{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}::slotted(:is([slot=start],[slot=end])){font-size:inherit}:host(:where([hide],:state(hidden))) .forge-badge{transform:scale(0)}:host(:where([dot],:state(dot))) .forge-badge{--_badge-height: var(--_badge-dot-height);--_badge-min-width: var(--forge-badge-min-width, auto);padding:var(--_badge-dot-padding);width:var(--_badge-dot-width)}:host(:where([dot],:state(dot))) .content>slot{display:none}:host([theme=primary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-primary-container, #d1d5ed));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-primary-container, #222c62))}:host(:where([strong],:state(strong))[theme=primary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-primary, #3f51b5));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-primary, #ffffff))}:host([theme=secondary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-secondary-container, #fff0c3));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-secondary-container, #8a6804))}:host(:where([strong],:state(strong))[theme=secondary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-secondary, #ffc107));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-secondary, #000000))}:host([theme=tertiary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-tertiary-container, #d0d7ff));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-tertiary-container, #213189))}:host(:where([strong],:state(strong))[theme=tertiary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-tertiary, #3d5afe));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-tertiary, #ffffff))}:host([theme=success]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-success-container, #cde0ce));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-success-container, #19441b))}:host(:where([strong],:state(strong))[theme=success]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-success, #2e7d32));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-success, #ffffff))}:host([theme=warning]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-warning-container, #f4d3c2));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-warning-container, #712700))}:host(:where([strong],:state(strong))[theme=warning]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-warning, #d14900));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-warning, #ffffff))}:host(:not(:where([strong],:state(strong))):is([theme=error],[theme=danger])) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-error-container-low, #f6e0e4));--_badge-color: var(--forge-badge-color, var(--forge-theme-error, #b00020))}:host(:where([strong],:state(strong)):is([theme=error],[theme=danger])) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-error, #b00020));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-error, #ffffff))}:host(:not(:where([strong],:state(strong))):is([theme=info],[theme=info-primary])) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-info-container, #c7daf0));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-info-container, #0b3768))}:host(:where([strong],:state(strong)):is([theme=info],[theme=info-primary])) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-info, #1565c0));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-info, #ffffff))}:host(:not(:where([strong],:state(strong)))[theme=info-secondary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-surface-container-low, #ebebeb));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-surface-container-low, #000000))}:host(:where([strong],:state(strong))[theme=info-secondary]) .forge-badge{--_badge-background: var(--forge-badge-background, var(--forge-theme-surface-inverse, #333333));--_badge-color: var(--forge-badge-color, var(--forge-theme-on-surface-inverse, #ffffff))}';var z=Object.defineProperty,E=Object.getOwnPropertyDescriptor,v=e=>{throw TypeError(e)},n=(e,r,a,d)=>{for(var t=d>1?void 0:d?E(r,a):r,i=e.length-1,s;i>=0;i--)(s=e[i])&&(t=(d?s(r,a,t):s(t))||t);return d&&t&&z(r,a,t),t},l=(e,r,a)=>r.has(e)||v("Cannot "+a),h=(e,r,a)=>(l(e,r,"read from private field"),a?a.call(e):r.get(e)),B=(e,r,a)=>r.has(e)?v("Cannot add the same private member more than once"):r instanceof WeakSet?r.add(e):r.set(e,a),C=(e,r,a,d)=>(l(e,r,"write to private field"),r.set(e,a),a),p,c,g;const m="forge-badge";let o=class extends(c=u,p=k,c){constructor(){super(),B(this,g),this.dot=!1,this.theme="default",this.strong=!1,this.hide=!1,C(this,g,this.attachInternals())}willUpdate(e){e.has("dot")&&b(h(this,g),"dot",this.dot),e.has("strong")&&b(h(this,g),"strong",this.strong),e.has("hide")&&b(h(this,g),"hide",this.hide)}render(){return y`
      <div class="forge-badge" part="root">
        <slot name="start"></slot>
        <div class="content" part="content">
          <slot></slot>
        </div>
        <slot name="end"></slot>
      </div>
    `}};g=new WeakMap;o.styles=_(x);o[p]=m;n([f({type:Boolean,reflect:!0})],o.prototype,"dot",2);n([f({type:String,reflect:!0})],o.prototype,"theme",2);n([f({type:Boolean,reflect:!0})],o.prototype,"strong",2);n([f({type:Boolean,reflect:!0})],o.prototype,"hide",2);o=n([w(m)],o);export{o as B};
