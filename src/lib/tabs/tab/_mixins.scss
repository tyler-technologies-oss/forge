@use 'sass:list';
@use '../../core/styles/tabs/tab';
@use '../../focus-indicator/mixins' as focus-indicator;
@use '../../state-layer/mixins' as state-layer;
@use './variables';

@mixin provide-theme($theme) {
  @each $key, $value in $theme {
    @if list.index(variables.$supported-theme-properties, $key) == null {
      @error 'Invalid theme property: #{$key}';
    }
    @if $value {
      --#{tab.$prefix}-#{$key}: #{$value};
    }
  }
}

@mixin core-styles {
  @include tab.styles;

  forge-focus-indicator {
    @include focus-indicator.provide-theme(( shape: 8px ));
  }
}

@mixin focus-styles {
  @include tab.focus-styles;
}

@mixin focus-selected-styles {
  @include tab.focus-selected-styles;
}

@mixin pressed-styles {
  @include tab.pressed-styles;
}

@mixin pressed-selected-styles {
  @include tab.pressed-selected-styles;
}

@mixin disabled-styles {
  @include tab.disabled-styles;
}

@mixin selected-styles {
  @include tab.selected-styles;
  @include tab.forced-colors-styles;

  forge-focus-indicator {
    @include focus-indicator.provide-theme((
      'offset-block': 0 calc(var(--_active-indicator-height) + 1px)
    ));
  }

  forge-state-layer {
    @include state-layer.provide-theme((
      color: var(--_active-indicator-color)
    ));
  }
}

@mixin stacked-styles {
  @include tab.stacked-styles;
}

@mixin secondary-styles {
  @include tab.secondary-styles;
}

@mixin vertical-styles {
  @include tab.vertical-styles;
}

@mixin vertical-primary-styles {
  @include tab.vertical-primary-styles;
}

@mixin vertical-secondary-styles {
  @include tab.vertical-secondary-styles;
}

@mixin vertical-inverted-styles {
  @include tab.vertical-inverted-styles;
}

@mixin inverted-styles {
  @include tab.inverted-styles;
}

@mixin host {
  @include tab.host;
}

@mixin host-disabled {
  @include tab.host-disabled;
}
