@use '@material/theme/theme' as mdc-theme;
@use '@material/animation/functions' as mdc-animation;
@use '@material/ripple/ripple' as mdc-ripple;
@use '@material/ripple/ripple-theme' as mdc-ripple-theme;
@use '@material/feature-targeting/feature-targeting' as mdc-feature-targeting;
@use '@material/button/button-base' as mdc-button-base;
@use '@material/button/button-shared-theme' as mdc-button-shared-theme;
@use '@material/button/button-outlined' as mdc-button-outlined;
@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;
@use '../../theme';

@mixin host() {
  display: inline-block;
}

@mixin core-styles() {
  .forge-button-toggle {
    @include base;

    &:disabled {
      @include theme.property(border-color, border-color);
      @include mdc-theme.property(color, text-disabled-on-light);
    }

    &__selected:not(:disabled) {
      @include selected;
    }

    &__selected:disabled {
      @include selected;
      opacity: 0.37;
    }

    ::slotted([slot=leading]) {
      @include icon;

      margin-right: 4px;
    }

    ::slotted([slot=trailing]) {
      @include icon;

      margin-left: 4px;
    }

    &--dense {
      @include dense;

      ::slotted([slot=leading]) {
        @include icon-dense;
      }

      ::slotted([slot=trailing]) {
        @include icon-dense;
      }
    }
  }
}

@mixin base() {
  @include mdc-ripple.surface();
  @include mdc-ripple.radius-bounded();
  @include mdc-ripple-theme.states(primary, false);
  @include mdc-button-base.base(mdc-feature-targeting.all());
  @include mdc-button-shared-theme.shape-radius(small);
  @include mdc-button-shared-theme.container-fill-color(transparent);
  @include mdc-button-shared-theme.ink-color(primary);
  @include mdc-button-shared-theme.density(0);
  @include mdc-button-outlined.outlined(mdc-feature-targeting.all());
  @include mdc-button-outlined-theme.outline-width(mdc-button-outlined-theme.$outlined-border-width);
  @include mdc-button-outlined-theme.outline-color(primary);

  text-transform: none;
  overflow: hidden;
  width: 100%;
  box-sizing: border-box;
  transition: mdc-animation.enter(background-color, 150ms);
  border-radius: 0;
  border-bottom-width: var(--forge-button-toggle-border-bottom-width, 1px);
  border-right-width: var(--forge-button-toggle-border-right-width, 1px);
  border-top-left-radius: var(--forge-button-toggle-border-top-left-radius, 4px);
  border-bottom-left-radius: var(--forge-button-toggle-border-bottom-left-radius, 4px);
  border-top-right-radius: var(--forge-button-toggle-border-top-right-radius, 4px);
  border-bottom-right-radius: var(--forge-button-toggle-border-bottom-right-radius, 4px);
}

@mixin selected() {
  @include mdc-ripple-theme.states(on-primary, false);
  @include mdc-theme.property(background-color, primary);
  @include mdc-theme.property(color, text-primary-on-dark);
}

@mixin dense() {
  @include mdc-button-shared-theme.density(-3);

  height: 1.5rem;
  font-size: 0.75rem;
}

@mixin icon() {
  display: inline-block;
  width: 1.125rem;
  height: 1.125rem;
  font-size: 1.125rem !important;
  vertical-align: top;
}

@mixin icon-dense() {
  width: 0.875rem;
  height: 0.875rem;
  font-size: 0.875rem !important;
}
