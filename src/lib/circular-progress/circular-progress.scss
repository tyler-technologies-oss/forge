@use './core';
@use './animation';
@use './configuration';
@use '../core/styles/theme';
@use './token-utils' as *;

//
// Host styles
//

:host {
  @include configuration.host-configuration;
}

:host {
  @include core.container;
}

:host([hidden]) {
  display: none;
}

//
// Base styles
//

.forge-circular-progress {
  @include configuration.configuration;
}

.forge-circular-progress {
  @include core.progress;

  &--indeterminate {
    @include core.indeterminate;
  }
}

.forge-circular-progress,
.spinner,
.left,
.right,
.circle,
svg {
  @include core.positioned;
}

.center-content {
  @include core.center-content;
}

//
// Indeterminate styles
//

.left {
  @include core.indeterminate-left;

  .circle {
    @include core.indeterminate-left-circle;
  }
}
    
.right {
  @include core.indeterminate-right;

  .circle {
    @include core.indeterminate-right-circle;
  }
}

.circle {
  @include core.indeterminate-circle;
}

//
// Determinate styles
//

svg {
  @include core.determinate-svg;

  circle {
    @include core.determinate-svg-circle;
  }
}

.progress {
  @include core.determinate-progress;
}

.track {
  @include core.determinate-track;

  &-background {
    @include core.determinate-track-background;
  }
}

.spinner {
  @include core.determinate-spinner;
}

//
// Theme
//

@mixin theme($theme) {
  :host([theme=#{$theme}]) {
    .forge-circular-progress {
      @include override(indicator-color, theme.variable($theme));
      @include override(track-color, theme.variable(#{$theme}-container));
    }
  }
}

@include theme(primary);
@include theme(secondary);
@include theme(success);
@include theme(error);
@include theme(warning);
@include theme(info);

:host([no-track]) {
  .forge-circular-progress {
    @include override(track-color, transparent);
  }
}

@media screen and (forced-colors: active) {
  .progress {
    stroke: CanvasText;
  }

  .circle {
    border-color: CanvasText CanvasText Canvas Canvas;
  }
}

@include animation.keyframes;
