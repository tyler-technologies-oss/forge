@use '../core/styles/theme';
@use './token-utils' as *;

//
// Hover
//

@mixin container-hover($variant, $theme: primary) {
  @if $variant == outlined {
    @if $theme == primary {
      outline-style: #{token(hover-border-style)};
      outline-width: #{token(hover-border-width)};
      outline-color: #{token(hover-border-color)};
    } @else {
      outline-color: theme.variable(on-#{$theme}-container);
    }
  } @else if $variant == tonal {
    @if $theme == primary {
      background: #{token(tonal-hover-color)};
    }
  } @else if $variant == filled {
    @if $theme == primary {
      outline-style: #{token(hover-border-style)};
      outline-width: #{token(hover-border-width)};
      outline-color: #{token(hover-border-color)};
    } @else {
      outline-color: theme.variable(on-#{$theme}-container);
    }
  } @else if $variant == raised {
    box-shadow: #{token(raised-active-elevation)};
  }
}

//
// Focus
//

@mixin container-focus($variant) {
  @if $variant == raised {
    box-shadow: #{token(raised-active-elevation)};
  }
}

//
// Invalid
//

@mixin container-invalid($variant) {
  @if $variant == plain {
    color: #{token(invalid-color)};
  } @else if $variant == outlined {
    outline-style: #{token(invalid-border-style)};
    outline-width: #{token(invalid-border-width)};
    outline-color: #{token(invalid-border-color)};
  } @else if $variant == tonal {
    background: #{token(invalid-surface)};
  } @else if $variant == filled {
    outline-style: #{token(invalid-border-style)};
    outline-width: #{token(invalid-border-width)};
    outline-color: #{token(invalid-border-color)};
    background: #{token(invalid-surface)};
  } @else if $variant == raised {
    background: #{token(invalid-surface)};
  }
}

@mixin container-invalid-hover($variant) {
  @if $variant == outlined {
    outline-color: #{token(invalid-hover-border-color)};
  } @else if $variant == filled {
    outline-color: #{token(invalid-hover-border-color)};
  }
}

@mixin label-invalid {
  color: #{token(invalid-label-color)};
}

@mixin inset-label-invalid($variant) {
  @if $variant == plain {
    color: #{token(invalid-label-color)};
  } @else if $variant == outlined {
    color: #{token(invalid-label-color)};
  } @else if $variant == tonal {
    color: #{token(invalid-inset-label-on-surface-color)};
  } @else if $variant == filled {
    color: #{token(invalid-inset-label-on-surface-color)};
  } @else if $variant == raised {
    color: #{token(invalid-inset-label-on-surface-color)};
  }
}

//
// Popover
//

@mixin popover-expanded {
  & > * {
    rotate: #{token(popover-icon-open-rotation)};
  }
}
