@use '../core/styles/typography';
@use './token-utils' as *;
@forward './core.density';
@forward './core.layout';
@forward './core.state';
@forward './core.variant';

$host-tokens: [display];

@mixin host-configuration {
  @include tokens($includes: $host-tokens);
}

@mixin configuration {
  @include tokens($excludes: $host-tokens);
}

@mixin host {
  display: #{token(display)};
}

@mixin base {
  @include override('input-color', #{token(text-color)}, value);
  @include override('inner-border-color', #{token(border-color)}, value);

  display: grid;
  position: relative;
}

@mixin field-disabled {
  opacity: #{token(disabled-opacity)};
}

@mixin container {
  @include typography.style(body2);

  position: relative;
  flex-grow: 1;
  align-items: center;

  display: grid;
  grid-template-areas: 'start center end popover-icon accessory';
  grid-template-columns: auto 1fr auto auto auto;
  grid-area: container;
  
  border-radius: #{token(shape)};
  box-sizing: border-box;
  block-size: #{token(container-block-size, custom)};
  inline-size: 100%;
}

@mixin container-background {
  content: '';
  position: absolute;
  block-size: 100%;
  inline-size: 100%;
  transition-property: background, outline-color;
  transition-duration: #{token(animation-duration)};
  transition-timing-function: #{token(animation-timing-function)};
  border-radius: #{token(shape)};
}

@mixin input {
  z-index: 2;

  grid-area: center;

  block-size: 100%;
  inline-size: 100%;

  color: #{token(input-color, value)};
}

@mixin label {
  @include typography.style(label2);

  position: relative;
  gap: #{token(inner-label-gap)};

  display: inline-flex;
  grid-area: label;

  block-size: fit-content;

  color: #{token(label-color)};
}

@mixin label-before {
  content: #{token(required-content)};
  color: #{token(required-color)};
}

@mixin label-after {
  content: #{token(optional-content)};
  color: #{token(optional-color)};
}

@mixin popover-icon {
  isolation: isolate;
  align-items: center;

  display: flex;
  grid-area: popover-icon;

  block-size: 100%;
  padding-inline-end: 8px;

  & > * {
    transition: rotate #{token(popover-icon-transition-duration)} #{token(popover-icon-transition-timing)};
  }
}

@mixin popover-icon-arrow {
  fill: inherit;
}

@mixin slotted-input {
  box-sizing: border-box;
  outline: none;
  width: 100%;
  height: 100%;
  border: none;
  margin: 0;
  padding-block: 0;
  padding-inline: #{token(padding-inline)};

  background-color: transparent;

  font: inherit;
  color: inherit;
}

@mixin start {
  display: flex;
  grid-area: start;

  padding-inline-start: 8px;
}

@mixin end {
  display: flex;
  grid-area: end;

  padding-inline-end: 8px;
}

@mixin accessory {
  position: relative;
  align-items: center;
  
  display: flex;
  grid-area: accessory;

  block-size: 100%;
  padding-inline-end: 8px;

  &::before {
    content: '';

    block-size: 100%;
    border-inline-start-style: #{token(border-style)};
    border-inline-start-width: #{token(border-width)};
    border-inline-start-color: #{token(inner-border-color, value)};
    padding-inline-end: 8px;

    transition-property: border-color;
    transition-duration: #{token(animation-duration)};
    transition-timing-function: #{token(animation-timing-function)};
  }
}

@mixin helper-text {
  justify-content: space-between;

  display: flex;
  grid-area: helper-text;
}
