@use './configuration';
@use './core';
@use '../state-layer/core' as state-layer;
@use '../focus-indicator/core' as focus-indicator;

:host {
  @include configuration.host-configuration;
  @include core.host;
}

:host([hidden]) {
  display: none;
}

.forge-button {
  @include configuration.configuration;
  @include core.base;

  ::slotted(:is([slot=start],[slot=end])) {
    @include core.slotted-start-end;
  }
}

a.forge-button {
  @include core.anchor-reset;
}

forge-state-layer {
  @include state-layer.provide-theme(( color: var(--_color) ));
}

forge-focus-indicator {
  @include focus-indicator.provide-theme(( color: var(--_primary-color) ));
}

// Theme

@mixin theme($theme) {
  :host([theme=#{$theme}]) {
    .forge-button {
      --_primary-color: var(--forge-theme-#{$theme});
      --_text-color: var(--forge-theme-on-#{$theme});
    }
  }
}

@include theme(secondary);
@include theme(tertiary);
@include theme(success);
@include theme(error);
@include theme(warning);
@include theme(info);

// Variant styles

:host(:is(:not([variant], [variant=text]))) {
  forge-focus-indicator {
    /* stylelint-disable-next-line length-zero-no-unit */
    @include focus-indicator.provide-theme(( outward-offset: 0px ));
  }
}

:host([variant=raised]) {
  .forge-button {
    @include core.raised;
  }

  forge-state-layer {
    @include state-layer.provide-theme(( color: var(--_raised-color) ));
  }
}

:host([variant=flat]) {
  .forge-button {
    @include core.flat;
  }

  forge-state-layer {
    @include state-layer.provide-theme(( color: var(--_flat-color) ));
  }
}

:host([variant=outlined]) {
  .forge-button {
    @include core.outlined;
  }
}

:host([variant=link]) {
  .forge-button {
    @include core.link;
  }

  forge-focus-indicator {
    @include focus-indicator.provide-theme(( outward-offset: 2px ));
  }
}

// Dense styles

:host([dense]) {
  .forge-button {
    @include core.dense;
  }
}

// Utilities

:host([pill]) {
  .forge-button {
    @include core.pill;
  }

  forge-focus-indicator {
    @include focus-indicator.provide-theme(( shape: var(--_pill-shape) ));
  }
}

// Disabled styles

:host(:not([href])[disabled]) {
  @include core.host-disabled;

  .forge-button {
    @include core.disabled;
  }
}

:host(:not([href])[variant=raised][disabled]) {
  .forge-button {
    @include core.raised-disabled;
  }
}

:host(:not([href])[variant=flat][disabled]) {
  .forge-button {
    @include core.flat-disabled;
  }
}

:host(:not([href])[variant=outlined][disabled]) {
  .forge-button {
    @include core.outlined-disabled;
  }
}
