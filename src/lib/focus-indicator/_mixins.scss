@use '../core/styles/tokens';

@mixin provide-theme($theme) {
  @include tokens.provide('focus-indicator', $theme);
}

@mixin configuration {
  --_active-width: var(--forge-focus-indicator-active-width, 6px);
  --_color: var(--forge-focus-indicator-color, #{tokens.variable(primary)});
  --_duration: var(--forge-focus-indicator-duration, 600ms);
  --_outward-offset: var(--forge-focus-indicator-outward-offset, 4px);
  --_inward-offset: var(--forge-focus-indicator-inward-offset, 0px); // stylelint-disable-line length-zero-no-unit
  --_shape: var(--forge-focus-indicator-shape, 1px);
  --_width: var(--forge-focus-indicator-width, 2px);
  --_easing: var(--forge-focus-indicator-easing, cubic-bezier(0.2, 0, 0, 1));
  --_shape-start-start: var(--forge-focus-indicator-shape-start-start, var(--_shape));
  --_shape-start-end: var(--forge-focus-indicator-shape-start-end, var(--_shape));
  --_shape-end-start: var(--forge-focus-indicator-shape-end-start, var(--_shape));
  --_shape-end-end: var(--forge-focus-indicator-shape-end-end, var(--_shape));
  --_margin-block: var(--forge-focus-indicator-offset-block, 0);
  --_margin-inline: var(--forge-focus-indicator-offset-inline, 0);
}

@mixin core-styles {
  .forge-focus-indicator {
    @include configuration;
    @include base;
  }

  @include reduced-motion-styles;
  @include keyframes;
}

@mixin outward-styles {
  .forge-focus-indicator {
    @include outward;
  }
}

@mixin inward-styles {
  .forge-focus-indicator {
    @include inward;
  }
}

@mixin active-styles {
  .forge-focus-indicator {
    @include active;
  }
}

@mixin circular-styles {
  .forge-focus-indicator {
    --_shape: 50%;
  }
}

@mixin reduced-motion-styles {
  @media (prefers-reduced-motion) {
    .forge-focus-indicator {
      animation: none;
    }
  }
}

@mixin base {
  animation-delay: 0s, calc(var(--_duration) * 0.25);
  animation-duration: calc(var(--_duration) * 0.25), calc(var(--_duration) * 0.75);
  animation-timing-function: var(--_easing);
  box-sizing: border-box;
  color: var(--_color);
  display: none;
  pointer-events: none;
  position: absolute;
  margin-block: var(--_margin-block);
  margin-inline: var(--_margin-inline);
}

@mixin active {
  display: flex;
}

@mixin outward {
  animation-name: outward-grow, outward-shrink;
  border-end-end-radius: calc(var(--_shape-end-end) + var(--_outward-offset));
  border-end-start-radius: calc(var(--_shape-end-start) + var(--_outward-offset));
  border-start-end-radius: calc(var(--_shape-start-end) + var(--_outward-offset));
  border-start-start-radius: calc(var(--_shape-start-start) + var(--_outward-offset));
  inset: calc(-1 * var(--_outward-offset));
  outline: var(--_width) solid currentColor;
}

@mixin inward {
  animation-name: inward-grow, inward-shrink;
  border-end-end-radius: calc(var(--_shape-end-end) - var(--_inward-offset));
  border-end-start-radius: calc(var(--_shape-end-start) - var(--_inward-offset));
  border-start-end-radius: calc(var(--_shape-start-end) - var(--_inward-offset));
  border-start-start-radius: calc(var(--_shape-start-start) - var(--_inward-offset));
  border: var(--_width) solid currentColor;
  inset: var(--_inward-offset);
}

@mixin keyframes {
  @keyframes outward-grow {
    from {
      outline-width: 0;
    }
    to {
      outline-width: var(--_active-width);
    }
  }

  @keyframes outward-shrink {
    from {
      outline-width: var(--_active-width);
    }
  }

  @keyframes inward-grow {
    from {
      border-width: 0;
    }
    to {
      border-width: var(--_active-width);
    }
  }

  @keyframes inward-shrink {
    from {
      border-width: var(--_active-width);
    }
  }
}
