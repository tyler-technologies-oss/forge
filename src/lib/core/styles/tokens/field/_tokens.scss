@use 'sass:map';
@use '../../animation';
@use '../../border';
@use '../../elevation';
@use '../../shape';
@use '../../theme';
@use '../../utils';

$tokens: (
  display: utils.module-val(field, display, block),
  text-color: utils.module-val(field, text-color, theme.variable(text-high)),

  // Spacing (label)
  label-margin-inline: utils.module-val(field, label-margin-inline, 8px),
  label-margin-block: utils.module-val(field, label-margin-block, 2px),
  label-gap: utils.module-val(field, label-gap, 0.25em),

  // Spacing (container)
  container-padding: utils.module-val(field, container-padding, 12px),
  container-padding-start: utils.module-ref(field, container-padding-start, container-padding),
  container-padding-end: utils.module-ref(field, container-padding-end, container-padding),
  container-gap: utils.module-val(field, container-gap, 8px),
  start-padding-end: utils.module-ref(field, start-padding-end, container-gap),
  end-padding-start: utils.module-ref(field, end-padding-start, container-gap),
  end-padding-end: utils.module-ref(field, end-padding-end, container-gap),
  popover-icon-padding-start: utils.module-ref(field, popover-icon-padding-start, container-gap),
  popover-icon-padding-end: utils.module-ref(field, popover-icon-padding-end, container-gap),
  accessory-padding: utils.module-ref(field, accessory-padding, container-gap),
  accessory-padding-start: utils.module-ref(field, accessory-padding-start, accessory-padding),
  accessory-padding-end: utils.module-ref(field, accessory-padding-end, accessory-padding),

  // Spacing (support text)
  support-text-padding-block: utils.module-val(field, support-text-padding-block, 2px),
  support-text-gap: utils.module-val(field, support-text-gap, 8px),
  support-text-padding-inline: utils.module-ref(field, support-text-padding-inline, container-padding),
  support-text-padding-inline-start: utils.module-ref(field, support-text-padding-inline-start, support-text-padding-inline),
  support-text-padding-inline-end: utils.module-ref(field, support-text-padding-inline-end, support-text-padding-inline),

  // Spacing (pill)
  pill-container-padding: utils.module-val(field, pill-container-padding, 16px),
  pill-container-padding-start: utils.module-ref(field, pill-container-padding-start, pill-container-padding),
  pill-container-padding-end: utils.module-ref(field, pill-container-padding-end, pill-container-padding),
  
  // Sizes
  height-extra-small: utils.module-val(field, height-extra-small, 24px),
  height-small: utils.module-val(field, height-small, 32px),
  height-medium: utils.module-val(field, height-medium, 40px),
  height-large: utils.module-val(field, height-large, 48px),
  height-extra-large: utils.module-val(field, height-extra-large, 56px),
  
  // Inset sizes
  inset-height-extra-small: utils.module-ref(field, inset-height-extra-small, inset-height-small),
  inset-height-small: utils.module-val(field, inset-height-small, 40px),
  inset-height-medium: utils.module-val(field, inset-height-medium, 48px),
  inset-height-large: utils.module-val(field, inset-height-large, 56px),
  inset-height-extra-large: utils.module-val(field, inset-height-extra-large, 64px),
  
  // Border
  shape: utils.module-val(field, shape, shape.variable(medium)),
  border-style: utils.module-val(field, border-style, solid),
  border-width: utils.module-val(field, border-width, border.variable(thin)),
  border-color: utils.module-val(field, border-color, theme.variable(outline-medium)),
  tonal-inner-border-color: utils.module-val(field, tonal-inner-border-color, theme.variable(outline-low)),
  inner-border-block-size: utils.module-val(field, inner-border-block-size, calc(100% - 8px)),

  // Label
  label-color: utils.module-val(field, label-color, theme.variable(text-high)),
  inset-label-color: utils.module-val(field, inset-label-color, theme.variable(text-medium)),

  // Hover
  hover-border-style: utils.module-ref(field, hover-border-style, border-style),
  hover-border-width: utils.module-ref(field, hover-border-width, border-width),
  hover-border-color: utils.module-val(field, hover-border-color, theme.variable(outline-high)),

  // Invalid
  invalid-color: utils.module-val(field, invalid-color, theme.variable(error)),
  invalid-border-style: utils.module-ref(field, invalid-border-style, border-style),
  invalid-border-color: utils.module-ref(field, invalid-border-color, invalid-color),
  invalid-border-width: utils.module-ref(field, invalid-border-width, border-width),
  invalid-surface: utils.module-val(field, invalid-surface, theme.variable(error-container-low)),
  invalid-surface-hover: utils.module-val(field, invalid-surface-hover, theme.variable(error-container-minimum)),
  invalid-label-color: utils.module-ref(field, invalid-label-color, invalid-color),
  invalid-on-surface-color: utils.module-val(field, invalid-on-surface-color, theme.variable(on-error-container-low)),
  invalid-inset-label-on-surface-color: utils.module-ref(field, invalid-inset-label-on-surface-color, invalid-on-surface-color),
  invalid-hover-border-color: utils.module-val(field, invalid-hover-border-color, theme.variable(error-container-high)),

  // Plain
  plain-container-padding: utils.module-val(field, plain-container-padding, 0),

  // Tonal
  tonal-surface: utils.module-val(field, tonal-surface, theme.variable(surface-container-low)),
  tonal-on-surface-color: utils.module-val(field, tonal-on-surface-color, theme.variable(on-surface-container-low)),
  tonal-hover-color: utils.module-val(field, tonal-hover-color, theme.variable(surface-container-minimum)),

  // Filled
  filled-surface: utils.module-val(field, filled-surface, theme.variable(surface-bright)),
  filled-on-surface-color: utils.module-val(field, filled-on-surface-color, theme.variable(on-surface)),

  // Raised
  raised-elevation: utils.module-val(field, raised-elevation, elevation.value(1)),
  raised-active-elevation: utils.module-val(field, raised-active-elevation, elevation.value(3)),
  raised-surface: utils.module-ref(field, raised-surface, filled-surface),
  raised-on-surface-color: utils.module-ref(field, raised-on-surface-color, filled-on-surface-color),

  // Required and optional
  required-content: utils.module-val(field, required-content, '*'),
  required-color: utils.module-val(field, required-color, theme.variable(error)),
  optional-content: utils.module-val(field, optional-content, '(optional)'),
  optional-color: utils.module-val(field, optional-color, inherit),

  // Popover icon
  popover-icon-transition-duration: utils.module-val(field, popover-icon-transition-duration, animation.variable(duration-short3)),
  popover-icon-transition-timing: utils.module-val(field, popover-icon-transition-timing, animation.variable(easing-standard)),
  popover-icon-open-rotation: utils.module-val(field, popover-icon-open-rotation, 180deg),

  // Multiline
  multiline-resize: utils.module-val(field, multiline-resize, vertical),
  multiline-min-inline-size: utils.module-val(field, multiline-min-inline-size, initial),
  multiline-max-inline-size: utils.module-val(field, multiline-max-inline-size, initial),
  multiline-min-block-size: utils.module-val(field, multiline-min-block-size, initial),
  multiline-max-block-size: utils.module-val(field, multiline-max-block-size, initial),

  // Disabled
  disabled-opacity: utils.module-val(field, disabled-opacity, theme.emphasis(medium-low)),

  // Animation
  animation-duration: utils.module-val(field, animation-duration, animation.variable(duration-short4)),
  animation-timing-function: utils.module-val(field, animation-timing-function, animation.variable(easing-standard)),
  inset-animation-duration: utils.module-val(field, inset-animation-duration, animation.variable(duration-short4)),
  inset-animation-timing-function: utils.module-val(field, inset-animation-timing-function, animation.variable(easing-decelerate)),
) !default;

@function get($key) {
  @return map.get($tokens, $key);
}
