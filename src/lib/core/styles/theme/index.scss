@use 'sass:map';
@use '../core/config';
@use '../tokens/theme/tokens';
@use '../utils';

///
/// Emits custom property declarations for all default theme tokens.
/// 
@mixin properties {
  /// Temporary tokens to map the MDC theme to Forge theme
  /// TODO: Remove this once MDC dependency is removed
  :root {
    @each $token-name, $token-value in tokens.$mdc-remap {
      --mdc-theme-#{$token-name}: #{$token-value};
    }
  }

  // Forge theme tokens
  :root {
    @each $token-name, $token-value in tokens.$tokens {
      --#{config.$prefix}-theme-#{$token-name}: #{$token-value};
    }
  }
}

///
/// Emits custom property declarations for all dark theme tokens.
/// 
@mixin properties-dark {
  @each $token-name, $token-value in tokens.$tokens-dark {
    --#{config.$prefix}-theme-#{$token-name}: #{$token-value};
  }
}

///
/// Gets a CSS custom property declaration for a specific theme token, with its token value as the fallback value
/// 
@function variable($key, $prefix: config.$prefix) {
  @return utils.variable(theme, tokens.$tokens, $key, $prefix);
}

///
/// Generates CSS custom property declarations for the provided theme tokens.
/// 
@mixin provide($tokens, $prefix: config.$prefix) {
  @include utils.provide(tokens.$tokens, $tokens, theme, $prefix);
}
